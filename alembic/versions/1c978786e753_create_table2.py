"""create table2

Revision ID: 1c978786e753
Revises: b80848fbb66f
Create Date: 2025-06-10 11:10:11.619012

"""
from typing import Sequence, Union

from alembic import op
from pgvector.sqlalchemy import Vector
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1c978786e753'
down_revision: Union[str, None] = 'b80848fbb66f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('prompt_log',
    sa.Column('prompt_id', sa.UUID(), nullable=False),
    sa.Column('prompt_meeting_id', sa.UUID(), nullable=False),
    sa.Column('agent_type', sa.Enum('search', 'summary', 'feedback', 'role', name='agent_type_enum'), nullable=False),
    sa.Column('prompt_output', sa.Text(), nullable=False),
    sa.Column('prompt_input_date', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('prompt_output_date', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['prompt_meeting_id'], ['meeting.meeting_id'], ),
    sa.PrimaryKeyConstraint('prompt_id')
    )
    # op.drop_table('langchain_pg_collection')
    # op.drop_table('langchain_pg_embedding')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('langchain_pg_embedding',
    sa.Column('collection_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('embedding', Vector(None), autoincrement=False, nullable=True),
    sa.Column('document', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cmetadata', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('custom_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('uuid', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['collection_id'], ['langchain_pg_collection.uuid'], name=op.f('langchain_pg_embedding_collection_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uuid', name=op.f('langchain_pg_embedding_pkey'))
    )
    op.create_table('langchain_pg_collection',
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cmetadata', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('uuid', sa.UUID(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('uuid', name=op.f('langchain_pg_collection_pkey'))
    )
    op.drop_table('prompt_log')
    # ### end Alembic commands ###
