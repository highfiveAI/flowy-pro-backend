"""create table

Revision ID: 34ef314c1b65
Revises: 1c978786e753
Create Date: 2025-06-11 00:44:40.994082

"""
from typing import Sequence, Union

from alembic import op
from pgvector.sqlalchemy import Vector
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '34ef314c1b65'
down_revision: Union[str, None] = '1c978786e753'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('company',
    sa.Column('company_id', sa.UUID(), nullable=False),
    sa.Column('company_name', sa.String(length=150), nullable=False),
    sa.Column('company_scale', sa.String(length=100), nullable=True),
    sa.Column('service_startdate', sa.TIMESTAMP(), nullable=True),
    sa.Column('service_enddate', sa.TIMESTAMP(), nullable=True),
    sa.Column('service_status', sa.BOOLEAN(), nullable=False),
    sa.PrimaryKeyConstraint('company_id')
    )
    op.create_table('feedbacktype',
    sa.Column('feedbacktype_id', sa.UUID(), nullable=False),
    sa.Column('feedbacktype_name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('feedbacktype_id')
    )
    op.create_table('role',
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.Column('role_name', sa.String(length=50), nullable=False),
    sa.Column('role_detail', sa.String(length=1000), nullable=True),
    sa.PrimaryKeyConstraint('role_id')
    )
    op.create_table('sysrole',
    sa.Column('sysrole_id', sa.UUID(), nullable=False),
    sa.Column('sysrole_name', sa.String(length=50), nullable=False),
    sa.Column('sysrole_detail', sa.String(length=1000), nullable=False),
    sa.Column('permissions', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('sysrole_id')
    )
    op.create_table('admin',
    sa.Column('admin_id', sa.UUID(), nullable=False),
    sa.Column('admin_company_id', sa.UUID(), nullable=False),
    sa.Column('admin_sysrole_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['admin_company_id'], ['company.company_id'], ),
    sa.ForeignKeyConstraint(['admin_sysrole_id'], ['sysrole.sysrole_id'], ),
    sa.PrimaryKeyConstraint('admin_id')
    )
    op.create_table('company_position',
    sa.Column('position_id', sa.UUID(), nullable=False),
    sa.Column('position_company_id', sa.UUID(), nullable=False),
    sa.Column('position_code', sa.String(length=50), nullable=False),
    sa.Column('position_name', sa.String(length=100), nullable=False),
    sa.Column('position_detail', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['position_company_id'], ['company.company_id'], ),
    sa.PrimaryKeyConstraint('position_id')
    )
    op.create_table('project',
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('company_id', sa.UUID(), nullable=False),
    sa.Column('project_name', sa.String(length=200), nullable=False),
    sa.Column('project_detail', sa.Text(), nullable=True),
    sa.Column('project_created_date', sa.DateTime(), nullable=False),
    sa.Column('project_updated_date', sa.DateTime(), nullable=True),
    sa.Column('project_end_date', sa.DateTime(), nullable=True),
    sa.Column('project_status', sa.BOOLEAN(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.company_id'], ),
    sa.PrimaryKeyConstraint('project_id')
    )
    op.create_table('flowy_user',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('user_name', sa.String(length=50), nullable=False),
    sa.Column('user_email', sa.String(length=255), nullable=False),
    sa.Column('user_login_id', sa.String(length=50), nullable=False),
    sa.Column('user_password', sa.String(length=255), nullable=False),
    sa.Column('user_phonenum', sa.String(length=20), nullable=False),
    sa.Column('user_company_id', sa.UUID(), nullable=False),
    sa.Column('user_dept_name', sa.String(length=100), nullable=True),
    sa.Column('user_team_name', sa.String(length=100), nullable=True),
    sa.Column('user_position_id', sa.UUID(), nullable=False),
    sa.Column('user_jobname', sa.String(length=100), nullable=True),
    sa.Column('user_sysrole_id', sa.UUID(), nullable=False),
    sa.Column('user_login_type', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['user_company_id'], ['company.company_id'], ),
    sa.ForeignKeyConstraint(['user_position_id'], ['company_position.position_id'], ),
    sa.ForeignKeyConstraint(['user_sysrole_id'], ['sysrole.sysrole_id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('meeting',
    sa.Column('meeting_id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('meeting_title', sa.String(length=150), nullable=False),
    sa.Column('meeting_agenda', sa.String(length=1000), nullable=True),
    sa.Column('meeting_date', sa.TIMESTAMP(), nullable=False),
    sa.Column('meeting_audio_path', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.project_id'], ),
    sa.PrimaryKeyConstraint('meeting_id')
    )
    op.create_table('draft_log',
    sa.Column('draft_id', sa.UUID(), nullable=False),
    sa.Column('meeting_id', sa.UUID(), nullable=True),
    sa.Column('draft_trigger', sa.Text(), nullable=False),
    sa.Column('docs_source_type', sa.Enum('internal', 'external', name='docs_source_type'), nullable=True),
    sa.Column('ref_interdoc_id', sa.UUID(), nullable=True),
    sa.Column('ref_external_link', sa.Text(), nullable=True),
    sa.Column('draft_title', sa.String(length=100), nullable=True),
    sa.Column('draft_url', sa.Text(), nullable=True),
    sa.Column('draft_ref_reason', sa.Text(), nullable=False),
    sa.Column('draft_created_date', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['meeting_id'], ['meeting.meeting_id'], ),
    sa.PrimaryKeyConstraint('draft_id')
    )
    op.create_table('feedback',
    sa.Column('feedback_id', sa.UUID(), nullable=False),
    sa.Column('meeting_id', sa.UUID(), nullable=False),
    sa.Column('feedbacktype_id', sa.UUID(), nullable=False),
    sa.Column('feedback_detail', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('feedback_created_date', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['feedbacktype_id'], ['feedbacktype.feedbacktype_id'], ),
    sa.ForeignKeyConstraint(['meeting_id'], ['meeting.meeting_id'], ),
    sa.PrimaryKeyConstraint('feedback_id')
    )
    op.create_table('interdocs',
    sa.Column('interdocs_id', sa.UUID(), nullable=False),
    sa.Column('interdocs_type_name', sa.String(length=50), nullable=False),
    sa.Column('interdocs_filename', sa.String(length=100), nullable=False),
    sa.Column('interdocs_contents', sa.String(length=255), nullable=False),
    sa.Column('interdocs_vector', Vector(512), nullable=False),
    sa.Column('interdocs_path', sa.Text(), nullable=False),
    sa.Column('interdocs_uploaded_date', sa.TIMESTAMP(), nullable=False),
    sa.Column('interdocs_updated_date', sa.TIMESTAMP(), nullable=True),
    sa.Column('interdocs_update_user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['interdocs_update_user_id'], ['flowy_user.user_id'], ),
    sa.PrimaryKeyConstraint('interdocs_id')
    )
    op.create_table('meeting_user',
    sa.Column('meeting_user_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('meeting_id', sa.UUID(), nullable=False),
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['meeting_id'], ['meeting.meeting_id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.role_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['flowy_user.user_id'], ),
    sa.PrimaryKeyConstraint('meeting_user_id')
    )
    op.create_table('profile_img',
    sa.Column('profile_img_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('profile_img_name', sa.String(length=100), nullable=False),
    sa.Column('profile_img_path', sa.Text(), nullable=False),
    sa.Column('profile_img_uploaded_date', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['flowy_user.user_id'], ),
    sa.PrimaryKeyConstraint('profile_img_id')
    )
    op.create_table('project_user',
    sa.Column('project_user_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.project_id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.role_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['flowy_user.user_id'], ),
    sa.PrimaryKeyConstraint('project_user_id')
    )
    op.create_table('prompt_log',
    sa.Column('prompt_id', sa.UUID(), nullable=False),
    sa.Column('prompt_meeting_id', sa.UUID(), nullable=False),
    sa.Column('agent_type', sa.Enum('search', 'summary', 'feedback', 'role', name='agent_type_enum'), nullable=False),
    sa.Column('prompt_output', sa.Text(), nullable=False),
    sa.Column('prompt_input_date', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('prompt_output_date', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['prompt_meeting_id'], ['meeting.meeting_id'], ),
    sa.PrimaryKeyConstraint('prompt_id')
    )
    op.create_table('signup_log',
    sa.Column('signup_log_id', sa.UUID(), nullable=False),
    sa.Column('signup_request_user_id', sa.UUID(), nullable=False),
    sa.Column('signup_update_user_id', sa.UUID(), nullable=False),
    sa.Column('signup_status_changed_date', sa.TIMESTAMP(), nullable=True),
    sa.Column('signup_completed_status', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['signup_request_user_id'], ['flowy_user.user_id'], ),
    sa.ForeignKeyConstraint(['signup_update_user_id'], ['flowy_user.user_id'], ),
    sa.PrimaryKeyConstraint('signup_log_id')
    )
    op.create_table('summary_log',
    sa.Column('summary_log_id', sa.UUID(), nullable=False),
    sa.Column('meeting_id', sa.UUID(), nullable=True),
    sa.Column('updated_summary_contents', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('updated_summary_date', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['meeting_id'], ['meeting.meeting_id'], ),
    sa.PrimaryKeyConstraint('summary_log_id')
    )
    op.create_table('task_assign_log',
    sa.Column('task_assign_log_id', sa.UUID(), nullable=False),
    sa.Column('meeting_id', sa.UUID(), nullable=True),
    sa.Column('updated_task_assign_contents', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('updated_task_assign_date', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['meeting_id'], ['meeting.meeting_id'], ),
    sa.PrimaryKeyConstraint('task_assign_log_id')
    )
    op.drop_table('langchain_pg_embedding')
    op.drop_table('langchain_pg_collection')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('langchain_pg_collection',
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cmetadata', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('uuid', sa.UUID(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('uuid', name='langchain_pg_collection_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('langchain_pg_embedding',
    sa.Column('collection_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('embedding', Vector(None), autoincrement=False, nullable=True),
    sa.Column('document', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cmetadata', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('custom_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('uuid', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['collection_id'], ['langchain_pg_collection.uuid'], name=op.f('langchain_pg_embedding_collection_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uuid', name=op.f('langchain_pg_embedding_pkey'))
    )
    op.drop_table('task_assign_log')
    op.drop_table('summary_log')
    op.drop_table('signup_log')
    op.drop_table('prompt_log')
    op.drop_table('project_user')
    op.drop_table('profile_img')
    op.drop_table('meeting_user')
    op.drop_table('interdocs')
    op.drop_table('feedback')
    op.drop_table('draft_log')
    op.drop_table('meeting')
    op.drop_table('flowy_user')
    op.drop_table('project')
    op.drop_table('company_position')
    op.drop_table('admin')
    op.drop_table('sysrole')
    op.drop_table('role')
    op.drop_table('feedbacktype')
    op.drop_table('company')
    # ### end Alembic commands ###
