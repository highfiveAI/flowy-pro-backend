"""create table

Revision ID: 7fecb809d837
Revises: 8d92cc462a1a
Create Date: 2025-06-21 15:09:43.553130

"""
from typing import Sequence, Union

from alembic import op
from pgvector.sqlalchemy import Vector
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7fecb809d837'
down_revision: Union[str, None] = '8d92cc462a1a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('calendar',
    sa.Column('calendar_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('start', sa.TIMESTAMP(), nullable=False),
    sa.Column('end', sa.TIMESTAMP(), nullable=True),
    sa.Column('calendar_type', sa.String(length=100), nullable=False),
    sa.Column('completed', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['project.project_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['flowy_user.user_id'], ),
    sa.PrimaryKeyConstraint('calendar_id')
    )
    op.drop_table('admin')
    op.alter_column('draft_log', 'draft_trigger',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('draft_log', 'ref_interdoc_id',
               existing_type=sa.UUID(),
               type_=sa.String(length=512),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('draft_log', 'ref_interdoc_id',
               existing_type=sa.String(length=512),
               type_=sa.UUID(),
               existing_nullable=True)
    op.alter_column('draft_log', 'draft_trigger',
               existing_type=sa.TEXT(),
               nullable=False)
    op.create_table('langchain_pg_collection',
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cmetadata', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('uuid', sa.UUID(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('uuid', name='langchain_pg_collection_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('admin',
    sa.Column('admin_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('admin_company_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('admin_sysrole_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['admin_company_id'], ['company.company_id'], name=op.f('admin_admin_company_id_fkey')),
    sa.ForeignKeyConstraint(['admin_sysrole_id'], ['sysrole.sysrole_id'], name=op.f('admin_admin_sysrole_id_fkey')),
    sa.PrimaryKeyConstraint('admin_id', name=op.f('admin_pkey'))
    )
    op.create_table('langchain_pg_embedding',
    sa.Column('collection_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('embedding', Vector(None), autoincrement=False, nullable=True),
    sa.Column('document', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cmetadata', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('custom_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('uuid', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['collection_id'], ['langchain_pg_collection.uuid'], name=op.f('langchain_pg_embedding_collection_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uuid', name=op.f('langchain_pg_embedding_pkey'))
    )
    op.drop_table('calendar')
    # ### end Alembic commands ###
