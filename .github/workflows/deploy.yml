name: Build and Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        push: true
        tags: handonggil/flowy-pro:latest
        no-cache: true

    - name: Create .env file locally
      run: |
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
        echo "SERPAPI_API_KEY=${{ secrets.SERPAPI_API_KEY }}" >> .env
        echo "CONNECTION_STRING=${{ secrets.CONNECTION_STRING }}" >> .env
        echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
        echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
        echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
        echo "FRONTEND_URI=${{ secrets.FRONTEND_URI }}" >> .env
        echo "BACKEND_URI=${{ secrets.BACKEND_URI }}" >> .env
        echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
        echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
        echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
        echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> .env
        echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> .env
        echo "COOKIE_SECURE=${{ secrets.COOKIE_SECURE }}" >> .env
        echo "COOKIE_SAMESITE=${{ secrets.COOKIE_SAMESITE }}" >> .env
        echo "AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}" >> .env
        echo "AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }}" >> .env
        echo "AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }}" >> .env
        echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> .env
        echo "MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}" >> .env
        echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> .env
        echo "MAIL_FROM=${{ secrets.MAIL_FROM }}" >> .env
        echo "MAIL_PORT=${{ secrets.MAIL_PORT }}" >> .env
        echo "MAIL_SERVER=${{ secrets.MAIL_SERVER }}" >> .env

    depends_on:

    - name: Copy docker-compose.yml to EC2
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "./docker-compose.yml"
        target: "~/app"

    - name: Copy .env to EC2
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "./.env"
        target: "~/app"

    - name: SSH to EC2 and deploy
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd ~/app
          docker-compose pull
          docker-compose up -d --remove-orphans
